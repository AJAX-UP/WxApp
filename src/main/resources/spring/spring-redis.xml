<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/tx 
						   http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- mybatis配置整合过程 -->
	<!-- 1:配置数据库连接 相关参数 -->
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true" />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--   <property name="maxActive" value="${maxActive}" /> -->
		<property name="maxIdle" value="${maxIdle}" />
		<!--  <property name="maxWait" value="${maxWait}" /> -->
		<property name="testOnBorrow" value="${testOnBorrow}" />
	</bean>
	
	<!-- Jedis ConnectionFactory 数据库连接配置 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${hostname}" />
		<property name="port" value="${port}" />
		<property name="password" value="${password}" />
		 <property name="database" value="${dbIndex}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	
	<!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 
	
	<bean id="jackson2JsonRedisSerializer"   
    class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer" />  
    
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
	 	<property name="keySerializer" >
	 		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	 	</property> 
	 	<property name="valueSerializer" ref="jackson2JsonRedisSerializer" />   
    	<property name="hashKeySerializer" ref="jackson2JsonRedisSerializer" />  
	</bean> -->

    <!-- 配置RedisCacheManager 
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="redisOperations" ref="redisTemplate" />
        <property name="defaultExpiration" value="${expiration}" />
    </bean> -->

    <!-- 配置RedisCacheConfig  
    <bean id="redisCacheConfig" class="com.miniapp.redisCon.RedisCacheConfig">
        <constructor-arg ref="jedisConnectionFactory" />
        <constructor-arg ref="redisTemplate" />
        <constructor-arg ref="redisCacheManager" />
    </bean> -->
	
</beans>